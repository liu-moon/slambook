# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.8)
   message(FATAL_ERROR "CMake >= 2.8.0 required")
endif()
if(CMAKE_VERSION VERSION_LESS "2.8.3")
   message(FATAL_ERROR "CMake >= 2.8.3 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.8.3...3.26)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_cmake_targets_defined "")
set(_cmake_targets_not_defined "")
set(_cmake_expected_targets "")
foreach(_cmake_expected_target IN ITEMS g2o::freeglut_minimal g2o::stuff g2o::opengl_helper g2o::core g2o::g2o_cli_library g2o::g2o_cli_application g2o::g2o_hierarchical_library g2o::g2o_simulator_library g2o::g2o_simulator2d_application g2o::g2o_simulator3d_application g2o::g2o_anonymize_observations_application g2o::g2o_viewer g2o::viewer_library g2o::types_data g2o::types_slam2d g2o::types_slam3d g2o::types_sba g2o::types_sim3 g2o::types_icp g2o::types_sclam2d g2o::types_slam2d_addons g2o::types_slam3d_addons g2o::solver_pcg g2o::solver_dense g2o::solver_structure_only g2o::solver_csparse g2o::csparse_extension g2o::solver_slam2d_linear g2o::solver_cholmod g2o::solver_eigen)
  list(APPEND _cmake_expected_targets "${_cmake_expected_target}")
  if(TARGET "${_cmake_expected_target}")
    list(APPEND _cmake_targets_defined "${_cmake_expected_target}")
  else()
    list(APPEND _cmake_targets_not_defined "${_cmake_expected_target}")
  endif()
endforeach()
unset(_cmake_expected_target)
if(_cmake_targets_defined STREQUAL _cmake_expected_targets)
  unset(_cmake_targets_defined)
  unset(_cmake_targets_not_defined)
  unset(_cmake_expected_targets)
  unset(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT _cmake_targets_defined STREQUAL "")
  string(REPLACE ";" ", " _cmake_targets_defined_text "${_cmake_targets_defined}")
  string(REPLACE ";" ", " _cmake_targets_not_defined_text "${_cmake_targets_not_defined}")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_cmake_targets_defined_text}\nTargets not yet defined: ${_cmake_targets_not_defined_text}\n")
endif()
unset(_cmake_targets_defined)
unset(_cmake_targets_not_defined)
unset(_cmake_expected_targets)


# Compute the installation prefix relative to this file.
get_filename_component(_IMPORT_PREFIX "${CMAKE_CURRENT_LIST_FILE}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
if(_IMPORT_PREFIX STREQUAL "/")
  set(_IMPORT_PREFIX "")
endif()

# Create imported target g2o::freeglut_minimal
add_library(g2o::freeglut_minimal SHARED IMPORTED)

set_target_properties(g2o::freeglut_minimal PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/home/liuiu/桌面/slambook/3rdparty/g2o/include"
  INTERFACE_LINK_LIBRARIES "OpenGL::GL;OpenGL::GLU"
)

# Create imported target g2o::stuff
add_library(g2o::stuff SHARED IMPORTED)

set_target_properties(g2o::stuff PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/home/liuiu/桌面/slambook/3rdparty/g2o/include"
)

# Create imported target g2o::opengl_helper
add_library(g2o::opengl_helper SHARED IMPORTED)

set_target_properties(g2o::opengl_helper PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/home/liuiu/桌面/slambook/3rdparty/g2o/include"
)

# Create imported target g2o::core
add_library(g2o::core SHARED IMPORTED)

set_target_properties(g2o::core PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/home/liuiu/桌面/slambook/3rdparty/g2o/include"
)

# Create imported target g2o::g2o_cli_library
add_library(g2o::g2o_cli_library SHARED IMPORTED)

set_target_properties(g2o::g2o_cli_library PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/home/liuiu/桌面/slambook/3rdparty/g2o/include"
)

# Create imported target g2o::g2o_cli_application
add_executable(g2o::g2o_cli_application IMPORTED)

set_target_properties(g2o::g2o_cli_application PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/home/liuiu/桌面/slambook/3rdparty/g2o/include"
)

# Create imported target g2o::g2o_hierarchical_library
add_library(g2o::g2o_hierarchical_library SHARED IMPORTED)

set_target_properties(g2o::g2o_hierarchical_library PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/home/liuiu/桌面/slambook/3rdparty/g2o/include"
)

# Create imported target g2o::g2o_simulator_library
add_library(g2o::g2o_simulator_library SHARED IMPORTED)

set_target_properties(g2o::g2o_simulator_library PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/home/liuiu/桌面/slambook/3rdparty/g2o/include"
)

# Create imported target g2o::g2o_simulator2d_application
add_executable(g2o::g2o_simulator2d_application IMPORTED)

set_target_properties(g2o::g2o_simulator2d_application PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/home/liuiu/桌面/slambook/3rdparty/g2o/include"
)

# Create imported target g2o::g2o_simulator3d_application
add_executable(g2o::g2o_simulator3d_application IMPORTED)

set_target_properties(g2o::g2o_simulator3d_application PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/home/liuiu/桌面/slambook/3rdparty/g2o/include"
)

# Create imported target g2o::g2o_anonymize_observations_application
add_executable(g2o::g2o_anonymize_observations_application IMPORTED)

set_target_properties(g2o::g2o_anonymize_observations_application PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/home/liuiu/桌面/slambook/3rdparty/g2o/include"
)

# Create imported target g2o::g2o_viewer
add_executable(g2o::g2o_viewer IMPORTED)

set_target_properties(g2o::g2o_viewer PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/home/liuiu/桌面/slambook/3rdparty/g2o/include;/usr/include/x86_64-linux-gnu/qt5;/usr/include/x86_64-linux-gnu/qt5/QtCore;/usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-g++ /usr/include/x86_64-linux-gnu/qt5;/usr/include/x86_64-linux-gnu/qt5/QtXml;/usr/include/x86_64-linux-gnu/qt5/QtCore;/usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-g++ /usr/include/x86_64-linux-gnu/qt5;/usr/include/x86_64-linux-gnu/qt5/QtGui;/usr/include/x86_64-linux-gnu/qt5/QtCore;/usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-g++ /usr/include/x86_64-linux-gnu/qt5;/usr/include/x86_64-linux-gnu/qt5/QtWidgets;/usr/include/x86_64-linux-gnu/qt5/QtGui;/usr/include/x86_64-linux-gnu/qt5/QtCore;/usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-g++ /usr/include/x86_64-linux-gnu/qt5;/usr/include/x86_64-linux-gnu/qt5/QtOpenGL;/usr/include/x86_64-linux-gnu/qt5/QtWidgets;/usr/include/x86_64-linux-gnu/qt5/QtGui;/usr/include/x86_64-linux-gnu/qt5/QtCore;/usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-g++;/usr/include/QGLViewer"
)

# Create imported target g2o::viewer_library
add_library(g2o::viewer_library SHARED IMPORTED)

set_target_properties(g2o::viewer_library PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/home/liuiu/桌面/slambook/3rdparty/g2o/include;/usr/include/x86_64-linux-gnu/qt5;/usr/include/x86_64-linux-gnu/qt5/QtCore;/usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-g++ /usr/include/x86_64-linux-gnu/qt5;/usr/include/x86_64-linux-gnu/qt5/QtXml;/usr/include/x86_64-linux-gnu/qt5/QtCore;/usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-g++ /usr/include/x86_64-linux-gnu/qt5;/usr/include/x86_64-linux-gnu/qt5/QtGui;/usr/include/x86_64-linux-gnu/qt5/QtCore;/usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-g++ /usr/include/x86_64-linux-gnu/qt5;/usr/include/x86_64-linux-gnu/qt5/QtWidgets;/usr/include/x86_64-linux-gnu/qt5/QtGui;/usr/include/x86_64-linux-gnu/qt5/QtCore;/usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-g++ /usr/include/x86_64-linux-gnu/qt5;/usr/include/x86_64-linux-gnu/qt5/QtOpenGL;/usr/include/x86_64-linux-gnu/qt5/QtWidgets;/usr/include/x86_64-linux-gnu/qt5/QtGui;/usr/include/x86_64-linux-gnu/qt5/QtCore;/usr/lib/x86_64-linux-gnu/qt5/mkspecs/linux-g++;/usr/include/QGLViewer"
)

# Create imported target g2o::types_data
add_library(g2o::types_data SHARED IMPORTED)

set_target_properties(g2o::types_data PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/home/liuiu/桌面/slambook/3rdparty/g2o/include"
)

# Create imported target g2o::types_slam2d
add_library(g2o::types_slam2d SHARED IMPORTED)

set_target_properties(g2o::types_slam2d PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/home/liuiu/桌面/slambook/3rdparty/g2o/include"
)

# Create imported target g2o::types_slam3d
add_library(g2o::types_slam3d SHARED IMPORTED)

set_target_properties(g2o::types_slam3d PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/home/liuiu/桌面/slambook/3rdparty/g2o/include"
)

# Create imported target g2o::types_sba
add_library(g2o::types_sba SHARED IMPORTED)

set_target_properties(g2o::types_sba PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/home/liuiu/桌面/slambook/3rdparty/g2o/include"
)

# Create imported target g2o::types_sim3
add_library(g2o::types_sim3 SHARED IMPORTED)

set_target_properties(g2o::types_sim3 PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/home/liuiu/桌面/slambook/3rdparty/g2o/include"
)

# Create imported target g2o::types_icp
add_library(g2o::types_icp SHARED IMPORTED)

set_target_properties(g2o::types_icp PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/home/liuiu/桌面/slambook/3rdparty/g2o/include"
)

# Create imported target g2o::types_sclam2d
add_library(g2o::types_sclam2d SHARED IMPORTED)

# Create imported target g2o::types_slam2d_addons
add_library(g2o::types_slam2d_addons SHARED IMPORTED)

set_target_properties(g2o::types_slam2d_addons PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/home/liuiu/桌面/slambook/3rdparty/g2o/include"
)

# Create imported target g2o::types_slam3d_addons
add_library(g2o::types_slam3d_addons SHARED IMPORTED)

set_target_properties(g2o::types_slam3d_addons PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/home/liuiu/桌面/slambook/3rdparty/g2o/include"
)

# Create imported target g2o::solver_pcg
add_library(g2o::solver_pcg SHARED IMPORTED)

set_target_properties(g2o::solver_pcg PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/home/liuiu/桌面/slambook/3rdparty/g2o/include"
)

# Create imported target g2o::solver_dense
add_library(g2o::solver_dense SHARED IMPORTED)

set_target_properties(g2o::solver_dense PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/home/liuiu/桌面/slambook/3rdparty/g2o/include"
)

# Create imported target g2o::solver_structure_only
add_library(g2o::solver_structure_only SHARED IMPORTED)

set_target_properties(g2o::solver_structure_only PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/home/liuiu/桌面/slambook/3rdparty/g2o/include"
)

# Create imported target g2o::solver_csparse
add_library(g2o::solver_csparse SHARED IMPORTED)

set_target_properties(g2o::solver_csparse PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/home/liuiu/桌面/slambook/3rdparty/g2o/include"
)

# Create imported target g2o::csparse_extension
add_library(g2o::csparse_extension SHARED IMPORTED)

set_target_properties(g2o::csparse_extension PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/home/liuiu/桌面/slambook/3rdparty/g2o/include"
)

# Create imported target g2o::solver_slam2d_linear
add_library(g2o::solver_slam2d_linear SHARED IMPORTED)

set_target_properties(g2o::solver_slam2d_linear PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/home/liuiu/桌面/slambook/3rdparty/g2o/include"
)

# Create imported target g2o::solver_cholmod
add_library(g2o::solver_cholmod SHARED IMPORTED)

set_target_properties(g2o::solver_cholmod PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/home/liuiu/桌面/slambook/3rdparty/g2o/include;/usr/include/suitesparse"
)

# Create imported target g2o::solver_eigen
add_library(g2o::solver_eigen SHARED IMPORTED)

set_target_properties(g2o::solver_eigen PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/home/liuiu/桌面/slambook/3rdparty/g2o/include"
)

if(CMAKE_VERSION VERSION_LESS 2.8.12)
  message(FATAL_ERROR "This file relies on consumers using CMake 2.8.12 or greater.")
endif()

# Load information for each installed configuration.
file(GLOB _cmake_config_files "${CMAKE_CURRENT_LIST_DIR}/g2oTargets-*.cmake")
foreach(_cmake_config_file IN LISTS _cmake_config_files)
  include("${_cmake_config_file}")
endforeach()
unset(_cmake_config_file)
unset(_cmake_config_files)

# Cleanup temporary variables.
set(_IMPORT_PREFIX)

# Loop over all imported files and verify that they actually exist
foreach(_cmake_target IN LISTS _cmake_import_check_targets)
  foreach(_cmake_file IN LISTS "_cmake_import_check_files_for_${_cmake_target}")
    if(NOT EXISTS "${_cmake_file}")
      message(FATAL_ERROR "The imported target \"${_cmake_target}\" references the file
   \"${_cmake_file}\"
but this file does not exist.  Possible reasons include:
* The file was deleted, renamed, or moved to another location.
* An install or uninstall procedure did not complete successfully.
* The installation package was faulty and contained
   \"${CMAKE_CURRENT_LIST_FILE}\"
but not all the files it references.
")
    endif()
  endforeach()
  unset(_cmake_file)
  unset("_cmake_import_check_files_for_${_cmake_target}")
endforeach()
unset(_cmake_target)
unset(_cmake_import_check_targets)

# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
